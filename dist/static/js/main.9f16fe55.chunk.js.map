{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"uPA2BeA,cAAQ,MANI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,GCNT,SAACA,EAASE,EAAV,IACeC,EADuB,EAAjBA,eAGdC,OAAOH,UAAUI,MAAK,WAC3BL,EAAU,CAACM,KAAM,8BDMdP,EAtBO,SAACQ,GACrB,OACE,wBAAIC,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBAEF,4BACE,uBAAGC,QAASH,EAAMN,SAAlB,YAEF,4BACE,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,mCAAmCD,EAAMI,QAAQC,eEEpEC,EAdQ,WACrB,OACE,wBAAIL,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASC,GAAG,WAAZ,WAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,WAAZ,YCkBOV,eATS,SAACe,GAErB,OADAC,QAAQC,IAAIF,GACN,CACFV,KAAMU,EAAMG,SAASb,KACrBO,QAASG,EAAMG,SAASN,WAKjBZ,EAtBA,SAACQ,GAAW,IAChBH,EAAiBG,EAAjBH,KAAMO,EAAWJ,EAAXI,QACPO,EAAQd,EAAKe,IAAM,kBAAC,EAAD,CAAeR,QAASA,IAAa,kBAAC,EAAD,MAC9D,OACI,yBAAKH,UAAU,6BACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,eACCU,O,yDCgBFE,EA1BO,SAACb,GAAW,IACvBc,EAAiBd,EAAjBc,cAEP,OADAN,QAAQC,IAAI,gBAAiBK,GAEzB,yBAAKb,UAAU,WACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,iBACVa,GAAiBA,EAAcC,KAAK,SAAAC,GACjC,OACI,wBAAIC,IAAKD,EAAKE,IACV,0BAAMjB,UAAU,aAAae,EAAKG,KAAlC,KACA,8BAAOH,EAAKI,SACZ,yBAAKnB,UAAU,uBACVoB,IAAOL,EAAKM,KAAKC,UAAUC,oBCFpDC,EAbQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OACI,yBAAKzB,UAAU,kCACf,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,cAAcyB,EAAQC,OACtC,wCAAcD,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChD,uBAAG5B,UAAU,aACRoB,IAAOK,EAAQI,UAAUP,UAAUQ,eCOrCC,EAbK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,OACI,yBAAKhC,UAAU,wBACXgC,GAAYA,EAASlB,KAAI,SAAAW,GACtB,OACI,kBAAC,IAAD,CAAMxB,GAAI,YAAcwB,EAAQR,GAAID,IAAKS,EAAQR,IACjD,kBAAC,EAAD,CAAgBQ,QAASA,U,gBCFtCQ,E,iLAEF1B,QAAQC,IAAI0B,KAAKnC,OADV,MAEmCmC,KAAKnC,MAAvCiC,EAFD,EAECA,SAAUpC,EAFX,EAEWA,KAAMiB,EAFjB,EAEiBA,cAExB,OAAKjB,EAAKe,IAER,yBAAKX,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAagC,SAAUA,KAEzB,yBAAKhC,UAAU,wBACb,kBAAC,EAAD,CAAea,cAAeA,OARhB,kBAAC,IAAD,CAAUZ,GAAG,gB,GALfkC,aA4BTC,cACb7C,aARsB,SAAAe,GACtB,MAAO,CACL0B,SAAU1B,EAAM+B,UAAUC,QAAQN,SAClCpC,KAAMU,EAAMG,SAASb,KACrBiB,cAAeP,EAAM+B,UAAUC,QAAQzB,kBAKzC0B,2BAAiB,CACf,CACEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SAEjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WANhDL,CAQbH,GCUaG,cACb7C,aAbsB,SAACe,EAAMqC,GAC7B,IAAM1B,EAAK0B,EAASC,MAAMC,OAAO5B,GAC3Be,EAAW1B,EAAM+B,UAAUS,KAAKd,SAGtC,MAAO,CACLP,QAHcO,EAAWA,EAASf,GAAM,KAIxCrB,KAAMU,EAAMG,SAASb,SAOvB2C,2BAAiB,CAAC,CAAEC,WAAY,cAFnBJ,EA/CQ,SAAArC,GAAU,IACxB0B,EAAiB1B,EAAjB0B,QAEH,OAFoB1B,EAARH,KAEHe,KACbJ,QAAQC,IAAIiB,GACTA,EAED,yBAAKzB,UAAU,qCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAhB,IAA+ByB,EAAQC,OACvC,2BACGD,EAAQN,UAGb,yBAAKnB,UAAU,wCACb,0CAAgByB,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClD,6BAAMR,IAAOK,EAAQI,UAAUP,UAAUQ,eAS7C,yBAAK9B,UAAU,oBACb,oDAxBmB,kBAAC,IAAD,CAAUC,GAAG,eCJlC8C,E,2MACJzC,MAAQ,CACJ0C,MAAO,GACPC,SAAU,I,EAEdC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAIhCC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKzD,MAAM0D,OAAO,EAAKnD,Q,wEAEf,IAAD,EACqB4B,KAAKnC,MAAxB2D,EADF,EACEA,UACP,OAFK,EACa9D,KACVe,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAE5B,yBAAKD,UAAU,aAClB,0BAAM2D,SAAUzB,KAAKqB,aAAcvD,UAAU,SACzC,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAO9D,KAAK,QAAQ+D,SAAU3B,KAAKgB,aAAcjC,GAAG,WAExD,yBAAKjB,UAAU,eACX,2BAAO4D,QAAQ,YAAf,YACA,2BAAO9D,KAAK,WAAW+D,SAAU3B,KAAKgB,aAAcjC,GAAG,cAE3D,yBAAKjB,UAAU,eACX,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBACV0D,EAAY,+BAAKA,EAAL,KAAuB,a,GAjCnCvB,aAsDN5C,eAbS,SAACe,GACrB,MAAM,CACFoD,UAAWpD,EAAMV,KAAK8D,UACtB9D,KAAMU,EAAMG,SAASb,SAIF,SAACJ,GACxB,MAAM,CACFiE,OAAQ,SAACK,GAAD,OAAWtE,GRxDJuE,EQwDoBD,ERvDhC,SAACtE,EAAUE,EAAX,IACcC,EADwB,EAAjBA,eAGfC,OAAOoE,2BACZD,EAAYf,MACZe,EAAYd,UACVpD,MACH,WACIL,EAAS,CAACM,KAAM,qBAErBmE,OAAM,SAACC,GACL1E,EAAS,CAAEM,KAAM,cAAeoE,cAZtB,IAACH,MQ4DRxE,CAA4CwD,GCtDrDoB,E,2MACJ7D,MAAQ,CACJ0C,MAAO,GACPC,SAAU,GACVmB,UAAU,GACVC,SAAU,I,EAEdnB,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAIhCC,aAAe,SAACJ,GACdA,EAAEK,iBACFjD,QAAQC,IAAI,EAAKF,OACjB,EAAKP,MAAMuE,OAAO,EAAKhE,Q,wEAEf,IAAD,EACoB4B,KAAKnC,MAAxBH,EADD,EACCA,KAAM8D,EADP,EACOA,UAEd,OAAG9D,EAAKe,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAC1B,yBAAKD,UAAU,aAClB,0BAAM2D,SAAUzB,KAAKqB,aAAcvD,UAAU,SACzC,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACX,2BAAO4D,QAAQ,aAAf,cACA,2BAAO9D,KAAK,OAAO+D,SAAU3B,KAAKgB,aAAcjC,GAAG,eAEvD,yBAAKjB,UAAU,eACX,2BAAO4D,QAAQ,YAAf,aACA,2BAAO9D,KAAK,OAAO+D,SAAU3B,KAAKgB,aAAcjC,GAAG,cAEvD,yBAAKjB,UAAU,eACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAO9D,KAAK,QAAQ+D,SAAU3B,KAAKgB,aAAcjC,GAAG,WAExD,yBAAKjB,UAAU,eACX,2BAAO4D,QAAQ,YAAf,YACA,2BAAO9D,KAAK,WAAW+D,SAAU3B,KAAKgB,aAAcjC,GAAG,cAI3D,yBAAKjB,UAAU,eACX,4BAAQA,UAAU,gCAAlB,WAGJ,yBAAKA,UAAU,mBACN0D,EAAY,+BAAKA,EAAL,KAAuB,Y,GAhDnCvB,aAoEjB5C,eAboB,SAACe,GACrB,MAAO,CACLV,KAAMU,EAAMG,SAASb,KACrB8D,UAAWpD,EAAMV,KAAK8D,cAGD,SAAClE,GACxB,MAAM,CACF8E,OAAQ,SAACC,GAAD,OAAa/E,ET3CP,SAAC+E,GACnB,OAAM,SAAC/E,EAASE,EAAV,GAAqD,IAAhCC,EAA+B,EAA/BA,YAAa6E,EAAkB,EAAlBA,aAC9B/D,EAAWd,IACX0C,EAAYmC,IAElB/D,EAASb,OAAO6E,+BACZF,EAAQvB,MACRuB,EAAQtB,UACVpD,MAAK,SAAC6E,GACJ,OAAOrC,EAAUG,WAAW,SAASmC,IAAID,EAASxD,KAAKP,KAAKiE,IAAI,CAC5DR,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClBjE,SAAUmE,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAEvDxE,MAAK,WACJL,EAAS,CAACM,KAAM,sBACjBmE,OAAM,SAAAC,GACL1E,EAAS,CAACM,KAAK,eAAeoE,YS0BJI,CAAOC,QAKzChF,CAA4C4E,G,QCrE1CU,E,2MACJvE,MAAQ,CACJoB,MAAO,GACPP,QAAS,I,EAEb+B,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAIhCC,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAKzD,MAAM+E,cAAc,EAAKxE,OAC9B,EAAKP,MAAMgF,QAAQC,KAAK,M,wEAItB,OADe9C,KAAKnC,MAAbH,KACEe,IAEJ,yBAAKX,UAAU,aAClB,0BAAM2D,SAAUzB,KAAKqB,aAAcvD,UAAU,SACzC,wBAAIA,UAAU,2BAAd,kBACA,yBAAKA,UAAU,eACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAO9D,KAAK,OAAO+D,SAAU3B,KAAKgB,aAAcjC,GAAG,WAEvD,yBAAKjB,UAAU,eACX,2BAAO4D,QAAQ,WAAf,mBACA,8BAAU3C,GAAG,UAAUjB,UAAU,uBAAuB6D,SAAU3B,KAAKgB,gBAE3E,yBAAKlD,UAAU,eACX,4BAAQA,UAAU,gCAAlB,aAdW,kBAAC,IAAD,CAAUC,GAAG,gB,GAnBZkC,aAkDb5C,eAXS,SAACe,GACrB,MAAM,CACFV,KAAMU,EAAMG,SAASb,SAGF,SAACJ,GACxB,MAAO,CACHsF,cAAe,SAACrD,GAAD,OAAajC,ECnDP,SAACiC,GAC1B,OAAO,SAACjC,EAAUE,EAAX,GAAqD,EAA/BC,YAAgC,IACnD0C,GAAYmC,EADsC,EAAlBA,gBAEhCrE,EAAUT,IAAWe,SAASN,QAC9B8E,EAAWvF,IAAWe,SAASb,KAAKe,IAC1C0B,EAAUG,WAAW,YAAY0C,IAAjC,eACOzD,EADP,CAEIE,gBAAiBxB,EAAQiE,UACzBxC,eAAgBzB,EAAQkE,SACxBY,SAAUA,EACVpD,UAAW,IAAIsD,QAChBtF,MAAK,WACJL,EAAS,CAACM,KAAM,iBAAkB2B,eAEnCwC,OAAM,SAACC,GACN1E,EAAS,CAACM,KAAM,uBAAwBoE,YDoCPY,CAAcrD,QAI5ClC,CAA6CsF,GE3B7CO,MAjBf,WACE,OACE,kBAAC,IAAD,KACA,yBAAKpF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,IAAIC,UAAWtD,IACjC,kBAAC,IAAD,CAAOqD,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAM,UAAUC,UAAWxC,IAClC,kBAAC,IAAD,CAAOuC,KAAM,UAAUC,UAAWpB,IAClC,kBAAC,IAAD,CAAOmB,KAAM,UAAUC,UAAWV,QCTtBY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShD,MACvB,2DClBN,IAAMiD,EAAY,CACdnC,UAAW,MAsCAoC,EAnCK,WAAgC,IAA/BxF,EAA8B,uDAAtBuF,EAAWE,EAAW,uCAC/C,OAAQA,EAAOjG,MACX,IAAK,cAED,OADAS,QAAQC,IAAI,cACL,eACAF,EADP,CAEIoD,UAAW,gBAEnB,IAAK,gBAED,OADAnD,QAAQC,IAAI,iBACZ,eACOF,EADP,CAEIoD,UAAW,OAEnB,IAAK,kBAED,OADAnD,QAAQC,IAAI,mBACLF,EACX,IAAK,iBAED,OADAC,QAAQC,IAAI,kBACZ,eACOF,EADP,CAEIoD,UAAU,OAEd,IAAK,eAED,OADAnD,QAAQC,IAAI,gBACZ,eACOF,EADP,CAEIoD,UAAWqC,EAAO7B,IAAI8B,UAGlC,QACI,OAAO1F,ICnCbuF,EAAY,CAChB7D,SAAU,CACR,CAAEf,GAAI,IAAKS,MAAO,qBAAsBP,QAAS,kBACjD,CAAEF,GAAI,IAAKS,MAAO,wBAAyBP,QAAS,kBACpD,CAAEF,GAAI,IAAKS,MAAO,sBAAuBP,QAAS,oBAkBvC8E,EAdQ,WAAgC,IAA/B3F,EAA8B,uDAAtBuF,EAAWE,EAAW,uCACpD,OAAQA,EAAOjG,MACb,IAAK,iBAEH,OADAS,QAAQC,IAAI,kBAAmBuF,EAAOtE,SAC/BnB,EAET,IAAK,uBACDC,QAAQC,IAAI,uBAAwBuF,EAAO7B,KAC3C,MACJ,QACI,OAAO5D,I,QCLA4F,EAPKC,YAAgB,CAChCvG,KAAMkG,EACNrE,QAASwE,EACT5D,UAAW+D,mBACX3F,SAAU4F,oB,wCCKZ5F,IAAS6F,cAXU,CACjBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjBrG,IAAS4B,YAAY0E,SAAS,IAEftG,I,EAAAA,IAAf,ECGIuG,EAAQC,YACZf,EACA9D,YACE8E,YAAgBC,IAAMC,kBAAkB,CAAE5C,4BAAc7E,6BACxD0H,yBAAe5G,IAAU6G,KAUvBC,GAAQ,GACZ9G,aACA+G,OAAQF,GAFI,uBAPe,CAC3BG,YAAa,QACbC,wBAAwB,EACxBC,wBAAwB,EACxBC,kBAAkB,IAGN,yBAIFZ,EAAMxH,UAJJ,wCAKZqI,2BALY,GAcdC,IAASC,OACP,kBAAC,IAAD,CAAUf,MAAOA,GACf,kBAAC,6BAA+BO,EAC9B,mBATN,YAAqC,IAAbS,EAAY,EAAZA,SAChBpI,EAAOqI,aAAY,SAAA3H,GAAK,OAAIA,EAAMG,SAASb,QACjD,OAAKsI,mBAAStI,GACPoI,EADqB,oDAOxB,KACE,kBAAC,EAAD,SAING,SAASC,eAAe,SLyEpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1I,MAAK,SAAA2I,GACJA,EAAaC,gBAEdxE,OAAM,SAAAyE,GACLnI,QAAQmI,MAAMA,EAAM1C,c","file":"static/js/main.9f16fe55.chunk.js","sourcesContent":["import React, { Profiler } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {connect} from 'react-redux'\nimport {signOut} from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n    return (dispatch, getState,{getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n            ).then(\n           () => {\n               dispatch({type: 'LOGIN_SUCCESS'})\n           } \n        ).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err})\n        })\n    }\n}\nexport const signOut = () => {\n    return(dispatch,getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch( {type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return(dispatch,getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((response) => {\n            return firestore.collection('users').doc(response.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({type:'SIGNUP_ERROR',err})\n        })\n    }\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport {connect} from 'react-redux'\n\nconst Navbar = (props) => {\n    const {auth, profile} = props\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return(\n        <nav className=\"nav-wrapper grey darken-1\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\"> MarioPlan </Link>\n                {links}\n\n            </div>\n        </nav>\n    )\n}\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const {notifications} = props\n    console.log('notifications', notifications)\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                       {notifications && notifications.map( item => {\n                           return(\n                               <li key={item.id}>\n                                   <span className=\"pink-text\">{item.user} </span>\n                                   <span>{item.content}</span>\n                                   <div className=\"grey-text note-date\">\n                                       {moment(item.time.toDate()).fromNow()}\n                                   </div>\n                               </li>\n                           )\n                       })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n            <p className=\"grey-text\">\n                {moment(project.createdAt.toDate()).calendar()}\n            </p>\n        </div>\n    </div>\n    )\n}\nexport default ProjectSummary","import React from 'react';\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    return(\n        <div className=\"project-list section\">\n           {projects && projects.map(project => {\n               return(\n                   <Link to={'/project/' + project.id} key={project.id}>\n                   <ProjectSummary project={project}  />\n                   </Link>\n               )\n           })}\n        </div>\n    )\n}\nexport default ProjectList","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    console.log(this.props)\n    const { projects, auth, notifications } = this.props;\n\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {\n      collection: \"projects\", orderBy: ['createdAt', 'desc']\n    },\n    { collection: \"notifications\", limit: 3, orderBy: ['time', 'desc'] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport {Redirect} from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = props => {\n  const {project, auth} = props;\n\n      if(!auth.uid) return <Redirect to='/signin' />\n  console.log(project)\n  if(project){\n    return(\n    <div className=\"container section project-details\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\"> {project.title}</span>\n          <p>\n            {project.content}\n          </p>\n        </div>\n        <div className=\"card-action grey lighten-4 grey-text\">\n          <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n          <div>{moment(project.createdAt.toDate()).calendar()}</div>\n        </div>\n      </div>\n    </div>\n    )\n\n  }\n  else{\n    return (\n      <div className=\"container center\">\n        <p>Loading project....</p>\n      </div>\n    \n      );\n  }\n \n};\n\nconst mapStateToProps = (state,ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects\n  const project = projects ? projects[id] : null\n\n  return {\n    project: project,\n    auth: state.firebase.auth\n\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport {connect} from 'react-redux'\nimport {signIn} from '../../store/actions/authActions'\nimport {Redirect} from 'react-router-dom'\n\n\nclass SignIn extends Component {\n  state = {\n      email: '',\n      password :''\n  };\n  handleChange = (e) => {\n      this.setState({\n          [e.target.id]: e.target.value\n\n      })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n}\n  render() {\n      const {authError, auth} = this.props;\n      if(auth.uid) return <Redirect to='/' />\n\n    return <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" onChange={this.handleChange} id=\"email\"/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" onChange={this.handleChange} id=\"password\"/>\n            </div>\n            <div className=\"input-field\">\n                <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                <div className=\"red-text center\">\n                    {authError ? <p> {authError} </p> : null }\n                </div>\n            </div>\n        </form>\n    </div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport {Redirect} from 'react-router-dom'\nimport { connect } from \"react-redux\"\nimport {signUp} from '../../store/actions/authActions'\n\n\nclass SignUp extends Component {\n  state = {\n      email: '',\n      password :'',\n      firstName:'',\n      lastName: ''\n  };\n  handleChange = (e) => {\n      this.setState({\n          [e.target.id]: e.target.value\n\n      })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state)\n    this.props.signUp(this.state)\n}\n  render() {\n    const { auth, authError} = this.props\n\n    if(auth.uid) return <Redirect to='/' />\n    return <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" onChange={this.handleChange} id=\"firstName\"/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" onChange={this.handleChange} id=\"lastName\"/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" onChange={this.handleChange} id=\"email\"/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" onChange={this.handleChange} id=\"password\"/>\n            </div>\n           \n            \n            <div className=\"input-field\">\n                <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\n            \n            </div>\n            <div className=\"red-text center\">\n                    {authError ? <p> {authError} </p> : null }\n                </div>\n        </form>\n    </div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.firebase.auth,\n      authError: state.auth.authError\n    }\n  }\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\n  export default \n    connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React, { Component } from \"react\";\nimport {connect} from 'react-redux'\nimport {createProject} from '../../store/actions/projectActions'\nimport {Redirect} from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n      title: '',\n      content :''\n  };\n  handleChange = (e) => {\n      this.setState({\n          [e.target.id]: e.target.value\n\n      })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state)\n    this.props.createProject(this.state)\n    this.props.history.push('/');\n}\n  render() {\n      const {auth} = this.props\n      if(!auth.uid) return <Redirect to='/signin' />\n\n    return <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" onChange={this.handleChange} id=\"title\"/>\n            </div>\n            <div className=\"input-field\">\n                <label htmlFor=\"content\">Project Content</label>\n                <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            </div>\n            <div className=\"input-field\">\n                <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n            </div>\n        </form>\n    </div>;\n  }\n}\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project}) \n\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err}) \n\n        })\n\n\n\n\n\n    }\n}","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Dashboard} />\n        <Route path='/project/:id' component={ProjectDetails} />\n        <Route path= '/signin' component={SignIn} />\n        <Route path= '/signup' component={SignUp} />\n        <Route path= '/create' component={CreateProject} />\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type){\n        case 'LOGIN_ERROR':\n            console.log('login fail')\n            return {\n                ...state,\n                authError: \"login error\"\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return{\n                ...state,\n                authError:null\n            }\n            case 'SIGNUP_ERROR':\n                console.log('signup error')\n                return{\n                    ...state,\n                    authError: action.err.message\n                }\n\n        default:\n            return state;\n\n    }\n}\nexport default authReducer","const initState = {\n  projects: [\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" }\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project\", action.project);\n      return state;\n      \n    case 'CREATE_PROJECT_ERROR':\n        console.log('create project error', action.err)\n        break;\n    default:\n        return state;\n  }\n  \n};\nexport default projectReducer;\n","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {combineReducers} from 'redux'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBzdy2LfvAZ7g_N17LhiOkAqc-2dBMIaEM\",\n    authDomain: \"marioplan-5cea1.firebaseapp.com\",\n    databaseURL: \"https://marioplan-5cea1.firebaseio.com\",\n    projectId: \"marioplan-5cea1\",\n    storageBucket: \"marioplan-5cea1.appspot.com\",\n    messagingSenderId: \"508672315847\",\n    appId: \"1:508672315847:web:75b73e0000eb372d8889e2\",\n    measurementId: \"G-T8VWZQSMD1\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n//   firebase.analytics();\n  firebase.firestore().settings({})\n\n  export default firebase","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded\n} from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n  return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}